  Building Custom Rule C:/Users/kikih/Documents/GitHub/INFOMGP-Practical3/CMakeLists.txt
  ccd.c
  mpr.c
  polytope.c
  support.c
  vec3.c
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\mpr.c(100,1): warning C4273: 'ccdMPRIntersect': inconsistent dll linkage
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\ccd.h(131,17): message : see previous definition of 'ccdMPRIntersect' (compiling source file C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\mpr.c)
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\mpr.c(119,1): warning C4273: 'ccdMPRPenetration': inconsistent dll linkage
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\ccd.h(146,17): message : see previous definition of 'ccdMPRPenetration' (compiling source file C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\mpr.c)
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\mpr.c(441,53): warning C4267: 'function': conversion from 'size_t' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\mpr.c(445,53): warning C4267: 'function': conversion from 'size_t' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\vec3.c(133,1): warning C4273: 'ccdVec3PointSegmentDist2': inconsistent dll linkage
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\vec3.h(188,24): message : see previous definition of 'ccdVec3PointSegmentDist2' (compiling source file C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\vec3.c)
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\vec3.c(141,1): warning C4273: 'ccdVec3PointTriDist2': inconsistent dll linkage
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\vec3.h(198,24): message : see previous definition of 'ccdVec3PointTriDist2' (compiling source file C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\vec3.c)
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\ccd.c(87,1): warning C4273: 'ccdFirstDirDefault': inconsistent dll linkage
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\ccd.h(75,18): message : see previous definition of 'ccdFirstDirDefault' (compiling source file C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\ccd.c)
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\ccd.c(92,1): warning C4273: 'ccdGJKIntersect': inconsistent dll linkage
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\ccd.h(96,17): message : see previous definition of 'ccdGJKIntersect' (compiling source file C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\ccd.c)
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\ccd.c(99,1): warning C4273: 'ccdGJKSeparate': inconsistent dll linkage
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\ccd.h(107,17): message : see previous definition of 'ccdGJKSeparate' (compiling source file C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\ccd.c)
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\ccd.c(177,1): warning C4273: 'ccdGJKPenetration': inconsistent dll linkage
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\ccd.h(124,17): message : see previous definition of 'ccdGJKPenetration' (compiling source file C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\ccd.c)
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\ccd.c(604,61): warning C4267: 'function': conversion from 'size_t' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\polytope.c(257,1): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h(208): message : see declaration of 'fopen'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\polytope.c(278,20): warning C4267: '=': conversion from 'size_t' to 'int', possible loss of data
  main.cpp
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\bind_vertex_attrib_array.cpp(21,35): warning C4244: 'argument': conversion from '__int64' to 'GLint', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\MeshGL.cpp(144,33): warning C4244: 'argument': conversion from '__int64' to 'GLsizei', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\MeshGL.cpp(152,44): warning C4244: 'argument': conversion from '__int64' to 'GLsizei', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\MeshGL.cpp(157,46): warning C4244: 'argument': conversion from '__int64' to 'GLsizei', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\../material_colors.h(16,77): warning C4305: 'initializing': truncation from 'double' to 'const float'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\../material_colors.h(17,77): warning C4305: 'initializing': truncation from 'double' to 'const float'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\../material_colors.h(18,77): warning C4305: 'initializing': truncation from 'double' to 'const float'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\../material_colors.h(23,78): warning C4305: 'initializing': truncation from 'double' to 'const float'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\../material_colors.h(24,78): warning C4305: 'initializing': truncation from 'double' to 'const float'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\../material_colors.h(25,79): warning C4305: 'initializing': truncation from 'double' to 'const float'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\../material_colors.h(26,84): warning C4305: 'initializing': truncation from 'double' to 'const float'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\../material_colors.h(39,77): warning C4305: 'initializing': truncation from 'double' to 'const float'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\../material_colors.h(40,75): warning C4305: 'initializing': truncation from 'double' to 'const float'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\../material_colors.h(43,73): warning C4305: 'initializing': truncation from 'double' to 'const float'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\../material_colors.h(44,74): warning C4305: 'initializing': truncation from 'double' to 'const float'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\../material_colors.h(45,82): warning C4305: 'initializing': truncation from 'double' to 'const float'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\../material_colors.h(47,47): warning C4305: 'argument': truncation from 'double' to 'const float'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\../material_colors.h(48,49): warning C4305: 'argument': truncation from 'double' to 'const float'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\../material_colors.h(49,45): warning C4305: 'argument': truncation from 'double' to 'const float'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\../material_colors.h(50,45): warning C4305: 'argument': truncation from 'double' to 'const float'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\../material_colors.h(51,49): warning C4305: 'argument': truncation from 'double' to 'const float'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\../material_colors.h(52,47): warning C4305: 'argument': truncation from 'double' to 'const float'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\../material_colors.h(54,48): warning C4305: 'argument': truncation from 'double' to 'const float'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\../material_colors.h(55,52): warning C4305: 'argument': truncation from 'double' to 'const float'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\ViewerData.cpp(264,14): warning C4244: 'initializing': conversion from '__int64' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\ViewerData.cpp(313,14): warning C4244: 'initializing': conversion from '__int64' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\ViewerData.cpp(334,14): warning C4244: 'initializing': conversion from '__int64' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\ViewerData.cpp(651,39): warning C4244: '=': conversion from '__int64' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\ViewerData.cpp(652,39): warning C4244: '=': conversion from '__int64' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\ViewerCore.cpp(33,74): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\ViewerCore.cpp(67,74): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\ViewerCore.cpp(84,14): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\ViewerCore.cpp(121,61): warning C4244: 'argument': conversion from 'float' to 'GLsizei', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\ViewerCore.cpp(121,48): warning C4244: 'argument': conversion from 'float' to 'GLsizei', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\ViewerCore.cpp(121,35): warning C4244: 'argument': conversion from 'float' to 'GLint', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\ViewerCore.cpp(121,22): warning C4244: 'argument': conversion from 'float' to 'GLint', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\ViewerCore.cpp(144,15): warning C4244: 'initializing': conversion from 'double' to 'float', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\ViewerCore.cpp(149,16): warning C4244: 'initializing': conversion from 'double' to 'float', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\ViewerCore.cpp(150,16): warning C4244: 'initializing': conversion from 'double' to 'float', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\ViewerCore.cpp(249,18): warning C4244: 'initializing': conversion from '__int64' to 'unsigned int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\ViewerCore.cpp(250,19): warning C4244: 'initializing': conversion from '__int64' to 'unsigned int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\ViewerCore.cpp(295,19): warning C4244: 'argument': conversion from 'unsigned int' to 'const float', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\ViewerCore.cpp(295,25): warning C4244: 'argument': conversion from 'unsigned int' to 'const float', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\EPS.h(16,36): warning C4305: 'initializing': truncation from 'double' to 'float'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\EPS.h(17,37): warning C4305: 'initializing': truncation from 'double' to 'float'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\glfw\Viewer.cpp(94,9): warning C4244: 'initializing': conversion from 'double' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\glfw\Viewer.cpp(95,9): warning C4244: 'initializing': conversion from 'double' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\glfw\Viewer.cpp(103,36): warning C4244: 'argument': conversion from 'double' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\glfw\Viewer.cpp(103,25): warning C4244: 'argument': conversion from 'double' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\glfw\Viewer.cpp(112,26): warning C4244: 'argument': conversion from 'double' to 'float', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\glfw\Viewer.cpp(159,65): warning C4244: 'argument': conversion from 'float' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\glfw\Viewer.cpp(159,48): warning C4244: 'argument': conversion from 'float' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\glfw\Viewer.cpp(617,54): warning C4244: 'argument': conversion from '__int64' to 'const double', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\glfw\Viewer.cpp(622,51): warning C4244: 'argument': conversion from 'double' to 'const float', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\glfw\Viewer.cpp(622,41): warning C4244: 'argument': conversion from 'double' to 'const float', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\glfw\Viewer.cpp(622,31): warning C4244: 'argument': conversion from 'double' to 'const float', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\glfw\Viewer.cpp(715,47): warning C4244: 'argument': conversion from 'float' to 'const int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\glfw\Viewer.cpp(715,30): warning C4244: 'argument': conversion from 'float' to 'const int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\glfw\Viewer.cpp(730,65): warning C4244: 'argument': conversion from 'int' to 'const float', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\glfw\Viewer.cpp(731,65): warning C4244: 'argument': conversion from 'int' to 'const float', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\glfw\Viewer.cpp(769,18): warning C4244: 'initializing': conversion from 'double' to 'float', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\glfw\Viewer.cpp(864,45): warning C4244: 'argument': conversion from 'double' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\glfw\Viewer.cpp(864,34): warning C4244: 'argument': conversion from 'double' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\glfw\Viewer.cpp(871,43): warning C4244: 'argument': conversion from 'int' to 'const float', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\glfw\Viewer.cpp(871,41): warning C4244: 'argument': conversion from 'int' to 'const float', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\glfw\imgui\ImGuiMenu.cpp(60,28): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\glfw\imgui\ImGuiMenu.cpp(366,60): warning C4244: 'argument': conversion from 'double' to 'float', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\glfw\imgui\ImGuiMenu.cpp(389,14): warning C4244: 'return': conversion from 'double' to 'float', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl/opengl/glfw/imgui/ImGuiHelpers.h(40,47): warning C4267: 'argument': conversion from 'size_t' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl/opengl/glfw/imgui/ImGuiHelpers.h(58,47): warning C4267: 'argument': conversion from 'size_t' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\copyleft\tetgen\mesh_to_tetgenio.cpp(26,31): warning C4267: '=': conversion from 'size_t' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\copyleft\tetgen\mesh_to_tetgenio.cpp(36,31): warning C4267: '=': conversion from 'size_t' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\copyleft\tetgen\mesh_to_tetgenio.cpp(43,30): warning C4267: '=': conversion from 'size_t' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\copyleft\tetgen\mesh_to_tetgenio.cpp(50,38): warning C4267: '=': conversion from 'size_t' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\copyleft\tetgen\mesh_to_tetgenio.cpp(59,30): warning C4267: '=': conversion from 'size_t' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\copyleft\tetgen\mesh_to_tetgenio.cpp(69,32): warning C4267: '=': conversion from 'size_t' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\copyleft\tetgen\mesh_to_tetgenio.cpp(113,31): warning C4267: '=': conversion from 'size_t' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\copyleft\tetgen\mesh_to_tetgenio.cpp(124,31): warning C4267: '=': conversion from 'size_t' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\copyleft\tetgen\mesh_to_tetgenio.cpp(138,38): warning C4267: '=': conversion from 'size_t' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\copyleft\tetgen\tetgenio_to_tetmesh.cpp(53,18): warning C4244: 'initializing': conversion from 'double' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\copyleft\tetgen\tetgenio_to_tetmesh.cpp(54,18): warning C4244: 'initializing': conversion from 'double' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\copyleft\tetgen\tetgenio_to_tetmesh.cpp(94,31): warning C4244: '=': conversion from 'size_t' to 'double', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\copyleft\tetgen\tetgenio_to_tetmesh.cpp(116,8): warning C4101: 'triface': unreferenced local variable
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\copyleft\tetgen\tetgenio_to_tetmesh.cpp(163,17): warning C4244: 'initializing': conversion from 'double' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\copyleft\tetgen\tetgenio_to_tetmesh.cpp(164,17): warning C4244: 'initializing': conversion from 'double' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\copyleft\tetgen\tetrahedralize.cpp(48,1): warning C4996: 'strcpy': This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\string.h(133): message : see declaration of 'strcpy'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\copyleft\tetgen\tetrahedralize.cpp(52,12): warning C4101: 'e': unreferenced local variable
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\copyleft\tetgen\tetrahedralize.cpp(165,1): warning C4996: 'strcpy': This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\string.h(133): message : see declaration of 'strcpy'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\copyleft\tetgen\tetrahedralize.cpp(168,14): warning C4101: 'e': unreferenced local variable
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\copyleft\tetgen\tetrahedralize.cpp(314,1): warning C4996: 'strcpy': This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\string.h(133): message : see declaration of 'strcpy'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\copyleft\tetgen\tetrahedralize.cpp(317,14): warning C4101: 'e': unreferenced local variable
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\scene.h(580,48): warning C4244: 'argument': conversion from '__int64' to 'const int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\scene.h(582,17): warning C4244: 'initializing': conversion from '__int64' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\scene.h(584,74): warning C4244: 'argument': conversion from '__int64' to 'const int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\scene.h(587,18): warning C4244: 'initializing': conversion from '__int64' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\scene.h(705,17): warning C4244: 'initializing': conversion from 'double' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\scene.h(709,18): warning C4244: '=': conversion from 'double' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\line_cylinders.h(43,21): warning C4244: 'initializing': conversion from '__int64' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\main.cpp(18,22): warning C4305: 'initializing': truncation from 'double' to 'float'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\ortho.cpp(21,15): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\ViewerCore.cpp(145): message : see reference to function template instantiation 'void igl::ortho<Eigen::Matrix<float,4,4,0,4,4>>(const float,const float,const float,const float,const float,const float,Eigen::PlainObjectBase<Eigen::Matrix<float,4,4,0,4,4>> &)' being compiled
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\ortho.cpp(22,15): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\ortho.cpp(23,16): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\frustum.cpp(20,28): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\ViewerCore.cpp(151): message : see reference to function template instantiation 'void igl::frustum<Eigen::Matrix<float,4,4,0,4,4>>(const float,const float,const float,const float,const float,const float,Eigen::PlainObjectBase<Eigen::Matrix<float,4,4,0,4,4>> &)' being compiled
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\frustum.cpp(21,28): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\frustum.cpp(26,38): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\writeOBJ.cpp(33,1): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h(208): message : see declaration of 'fopen'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\glfw\Viewer.cpp(468): message : see reference to function template instantiation 'bool igl::writeOBJ<Derived,Eigen::Matrix<int,-1,-1,0,-1,-1>,Derived,Eigen::Matrix<int,-1,-1,0,-1,-1>,Derived,Eigen::Matrix<int,-1,-1,0,-1,-1>>(const std::string,const Eigen::MatrixBase<Derived> &,const Eigen::MatrixBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &,const Eigen::MatrixBase<Derived> &,const Eigen::MatrixBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &,const Eigen::MatrixBase<Derived> &,const Eigen::MatrixBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &)' being compiled
          with
          [
              Derived=Eigen::Matrix<double,-1,-1,0,-1,-1>
          ]
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\two_axis_valuator_fixed_up.cpp(28,62): warning C4244: 'argument': conversion from 'double' to 'const float', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\glfw\Viewer.cpp(719): message : see reference to function template instantiation 'void igl::two_axis_valuator_fixed_up<float,float>(const int,const int,const double,const Eigen::Quaternion<float,0> &,const int,const int,const int,const int,Eigen::Quaternion<float,0> &)' being compiled
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\two_axis_valuator_fixed_up.cpp(38,52): warning C4244: 'argument': conversion from 'double' to 'const float', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\snap_to_canonical_view_quat.cpp(106,23): warning C4244: 'argument': conversion from 'const double' to 'const Q_type', possible loss of data
          with
          [
              Q_type=float
          ]
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\glfw\Viewer.cpp(881): message : see reference to function template instantiation 'bool igl::snap_to_canonical_view_quat<float,float>(const Eigen::Quaternion<float,0> &,const double,Eigen::Quaternion<float,0> &)' being compiled
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\boundary_facets.cpp(31,1): warning C4267: 'initializing': conversion from 'size_t' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\copyleft\tetgen\tetrahedralize.cpp(183): message : see reference to function template instantiation 'void igl::boundary_facets<int,int>(const std::vector<std::vector<int,std::allocator<int>>,std::allocator<std::vector<int,std::allocator<int>>>> &,std::vector<std::vector<int,std::allocator<int>>,std::allocator<std::vector<int,std::allocator<int>>>> &)' being compiled
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readMESH.cpp(248,1): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h(208): message : see declaration of 'fopen'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\scene.h(637): message : see reference to function template instantiation 'bool igl::readMESH<Eigen::Matrix<double,-1,-1,0,-1,-1>,Eigen::Matrix<int,-1,-1,0,-1,-1>,Eigen::Matrix<int,-1,-1,0,-1,-1>>(const std::string,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &)' being compiled
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readMESH.cpp(280,1): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h(2263): message : see declaration of 'sscanf'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readMESH.cpp(254): message : see reference to function template instantiation 'bool igl::readMESH<Eigen::Matrix<double,-1,-1,0,-1,-1>,Eigen::Matrix<int,-1,-1,0,-1,-1>,Eigen::Matrix<int,-1,-1,0,-1,-1>>(FILE *,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &)' being compiled
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\scene.h(637): message : see reference to function template instantiation 'bool igl::readMESH<Eigen::Matrix<double,-1,-1,0,-1,-1>,Eigen::Matrix<int,-1,-1,0,-1,-1>,Eigen::Matrix<int,-1,-1,0,-1,-1>>(const std::string,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &)' being compiled
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readMESH.cpp(290,1): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h(2263): message : see declaration of 'sscanf'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readMESH.cpp(293,1): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h(1197): message : see declaration of 'fscanf'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readMESH.cpp(310,1): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h(2263): message : see declaration of 'sscanf'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readMESH.cpp(319,1): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h(2263): message : see declaration of 'sscanf'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readMESH.cpp(322,1): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h(1197): message : see declaration of 'fscanf'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readMESH.cpp(339,1): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h(2263): message : see declaration of 'sscanf'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readMESH.cpp(351,1): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h(1197): message : see declaration of 'fscanf'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readMESH.cpp(363,1): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h(1197): message : see declaration of 'fscanf'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readMESH.cpp(382,1): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h(2263): message : see declaration of 'sscanf'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readMESH.cpp(391,1): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h(1197): message : see declaration of 'fscanf'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readMESH.cpp(403,1): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h(1197): message : see declaration of 'fscanf'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readMESH.cpp(422,1): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h(2263): message : see declaration of 'sscanf'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readMESH.cpp(431,1): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h(1197): message : see declaration of 'fscanf'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readMESH.cpp(443,1): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h(1197): message : see declaration of 'fscanf'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\per_face_normals.cpp(21,13): warning C4244: 'initializing': conversion from '__int64' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\per_face_normals.cpp(47): message : see reference to function template instantiation 'void igl::per_face_normals<Derived,Eigen::Matrix<int,-1,-1,0,-1,-1>,Eigen::Matrix<double,3,1,0,3,1>,Eigen::Matrix<double,-1,-1,0,-1,-1>>(const Eigen::MatrixBase<Derived> &,const Eigen::MatrixBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &,const Eigen::MatrixBase<Eigen::Matrix<double,3,1,0,3,1>> &,Eigen::PlainObjectBase<Derived> &)' being compiled
          with
          [
              Derived=Eigen::Matrix<double,-1,-1,0,-1,-1>
          ]
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\ViewerData.cpp(369): message : see reference to function template instantiation 'void igl::per_face_normals<Derived,Eigen::Matrix<int,-1,-1,0,-1,-1>,Eigen::Matrix<double,-1,-1,0,-1,-1>>(const Eigen::MatrixBase<Derived> &,const Eigen::MatrixBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Derived> &)' being compiled
          with
          [
              Derived=Eigen::Matrix<double,-1,-1,0,-1,-1>
          ]
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readOFF.cpp(20,1): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h(208): message : see declaration of 'fopen'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readOFF.cpp(177): message : see reference to function template instantiation 'bool igl::readOFF<double,int>(const std::string,std::vector<std::vector<double,std::allocator<double>>,std::allocator<std::vector<double,std::allocator<double>>>> &,std::vector<std::vector<int,std::allocator<int>>,std::allocator<std::vector<int,std::allocator<int>>>> &,std::vector<std::vector<double,std::allocator<double>>,std::allocator<std::vector<double,std::allocator<double>>>> &,std::vector<std::vector<double,std::allocator<double>>,std::allocator<std::vector<double,std::allocator<double>>>> &)' being compiled
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\glfw\Viewer.cpp(382): message : see reference to function template instantiation 'bool igl::readOFF<Eigen::Matrix<double,-1,-1,0,-1,-1>,Eigen::Matrix<int,-1,-1,0,-1,-1>>(const std::string,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &)' being compiled
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\list_to_matrix.cpp(22,1): warning C4267: 'initializing': conversion from 'size_t' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readOFF.cpp(184): message : see reference to function template instantiation 'bool igl::list_to_matrix<double,Eigen::Matrix<double,-1,-1,0,-1,-1>>(const std::vector<std::vector<double,std::allocator<double>>,std::allocator<std::vector<double,std::allocator<double>>>> &,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &)' being compiled
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readOBJ.cpp(31,1): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h(208): message : see declaration of 'fopen'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readOBJ.cpp(261): message : see reference to function template instantiation 'bool igl::readOBJ<double,int>(const std::string,std::vector<std::vector<double,std::allocator<double>>,std::allocator<std::vector<double,std::allocator<double>>>> &,std::vector<std::vector<double,std::allocator<double>>,std::allocator<std::vector<double,std::allocator<double>>>> &,std::vector<std::vector<double,std::allocator<double>>,std::allocator<std::vector<double,std::allocator<double>>>> &,std::vector<std::vector<int,std::allocator<int>>,std::allocator<std::vector<int,std::allocator<int>>>> &,std::vector<std::vector<int,std::allocator<int>>,std::allocator<std::vector<int,std::allocator<int>>>> &,std::vector<std::vector<int,std::allocator<int>>,std::allocator<std::vector<int,std::allocator<int>>>> &)' being compiled
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\glfw\Viewer.cpp(399): message : see reference to function template instantiation 'bool igl::readOBJ<Eigen::Matrix<double,-1,-1,0,-1,-1>,Eigen::Matrix<double,-1,-1,0,-1,-1>,Eigen::Matrix<double,-1,-1,0,-1,-1>,Eigen::Matrix<int,-1,-1,0,-1,-1>,Eigen::Matrix<int,-1,-1,0,-1,-1>,Eigen::Matrix<int,-1,-1,0,-1,-1>>(const std::string,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &)' being compiled
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\trackball.cpp(121,23): warning C4244: '=': conversion from 'double' to 'Q_type', possible loss of data
          with
          [
              Q_type=float
          ]
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\trackball.cpp(157): message : see reference to function template instantiation 'void igl::trackball<Scalarquat>(const double,const double,const Q_type,const Q_type *,const double,const double,const double,const double,Q_type *)' being compiled
          with
          [
              Scalarquat=float,
              Q_type=float
          ]
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\glfw\Viewer.cpp(711): message : see reference to function template instantiation 'void igl::trackball<float,float>(const double,const double,const double,const Eigen::Quaternion<float,0> &,const double,const double,const double,const double,Eigen::Quaternion<float,0> &)' being compiled
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\trackball.cpp(122,23): warning C4244: '=': conversion from 'double' to 'Q_type', possible loss of data
          with
          [
              Q_type=float
          ]
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\trackball.cpp(123,23): warning C4244: '=': conversion from 'double' to 'Q_type', possible loss of data
          with
          [
              Q_type=float
          ]
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\trackball.cpp(124,23): warning C4244: '=': conversion from 'double' to 'Q_type', possible loss of data
          with
          [
              Q_type=float
          ]
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\trackball.cpp(128,23): warning C4244: '=': conversion from 'double' to 'Q_type', possible loss of data
          with
          [
              Q_type=float
          ]
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\trackball.cpp(129,23): warning C4244: '=': conversion from 'double' to 'Q_type', possible loss of data
          with
          [
              Q_type=float
          ]
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\trackball.cpp(130,23): warning C4244: '=': conversion from 'double' to 'Q_type', possible loss of data
          with
          [
              Q_type=float
          ]
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\trackball.cpp(131,23): warning C4244: '=': conversion from 'double' to 'Q_type', possible loss of data
          with
          [
              Q_type=float
          ]
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\unproject.cpp(36,25): warning C4244: 'initializing': conversion from '__int64' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\unproject.cpp(65): message : see reference to function template instantiation 'void igl::unproject<Derived,Eigen::Matrix<float,4,4,0,4,4>,Eigen::Matrix<float,4,4,0,4,4>,Eigen::Matrix<float,4,1,0,4,1>,Eigen::Matrix<float,3,1,0,3,1>>(const Eigen::MatrixBase<Derived> &,const Eigen::MatrixBase<Eigen::Matrix<float,4,4,0,4,4>> &,const Eigen::MatrixBase<Eigen::Matrix<float,4,4,0,4,4>> &,const Eigen::MatrixBase<Eigen::Matrix<float,4,1,0,4,1>> &,Eigen::PlainObjectBase<Derived> &)' being compiled
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\glfw\Viewer.cpp(730): message : see reference to function template instantiation 'Eigen::Matrix<float,3,1,0,3,1> igl::unproject<float>(const Eigen::Matrix<float,3,1,0,3,1> &,const Eigen::Matrix<float,4,4,0,4,4> &,const Eigen::Matrix<float,4,4,0,4,4> &,const Eigen::Matrix<float,4,1,0,4,1> &)' being compiled
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\unproject.cpp(36,15): warning C4244: 'initializing': conversion from '__int64' to 'const int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\snap_to_canonical_view_quat.cpp(48,1): warning C4305: 'initializing': truncation from 'double' to 'Q_type'
          with
          [
              Q_type=float
          ]
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\snap_to_canonical_view_quat.cpp(106): message : see reference to function template instantiation 'bool igl::snap_to_canonical_view_quat<Scalars>(const Q_type *,const Q_type,Q_type *)' being compiled
          with
          [
              Scalars=float,
              Q_type=float
          ]
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\glfw\Viewer.cpp(881): message : see reference to function template instantiation 'bool igl::snap_to_canonical_view_quat<float,float>(const Eigen::Quaternion<float,0> &,const double,Eigen::Quaternion<float,0> &)' being compiled
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\snap_to_canonical_view_quat.cpp(64,1): warning C4244: '+=': conversion from 'double' to 'Q_type', possible loss of data
          with
          [
              Q_type=float
          ]
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\snap_to_canonical_view_quat.cpp(92,22): warning C4244: '=': conversion from 'double' to 'Q_type', possible loss of data
          with
          [
              Q_type=float
          ]
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readOFF.cpp(48,1): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h(1197): message : see declaration of 'fscanf'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readOFF.cpp(26): message : see reference to function template instantiation 'bool igl::readOFF<double,int>(FILE *,std::vector<std::vector<double,std::allocator<double>>,std::allocator<std::vector<double,std::allocator<double>>>> &,std::vector<std::vector<int,std::allocator<int>>,std::allocator<std::vector<int,std::allocator<int>>>> &,std::vector<std::vector<double,std::allocator<double>>,std::allocator<std::vector<double,std::allocator<double>>>> &,std::vector<std::vector<double,std::allocator<double>>,std::allocator<std::vector<double,std::allocator<double>>>> &)' being compiled
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readOFF.cpp(177): message : see reference to function template instantiation 'bool igl::readOFF<double,int>(const std::string,std::vector<std::vector<double,std::allocator<double>>,std::allocator<std::vector<double,std::allocator<double>>>> &,std::vector<std::vector<int,std::allocator<int>>,std::allocator<std::vector<int,std::allocator<int>>>> &,std::vector<std::vector<double,std::allocator<double>>,std::allocator<std::vector<double,std::allocator<double>>>> &,std::vector<std::vector<double,std::allocator<double>>,std::allocator<std::vector<double,std::allocator<double>>>> &)' being compiled
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readOFF.cpp(72,1): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h(2263): message : see declaration of 'sscanf'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readOFF.cpp(85,1): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h(2263): message : see declaration of 'sscanf'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readOFF.cpp(113,1): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h(1197): message : see declaration of 'fscanf'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readOFF.cpp(116,1): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h(1197): message : see declaration of 'fscanf'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readOFF.cpp(132,1): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h(1197): message : see declaration of 'fscanf'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readOFF.cpp(140,1): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h(1197): message : see declaration of 'fscanf'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readOFF.cpp(142,1): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h(1197): message : see declaration of 'fscanf'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readOFF.cpp(150,1): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h(1197): message : see declaration of 'fscanf'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readOFF.cpp(153,1): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h(1197): message : see declaration of 'fscanf'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readOBJ.cpp(138,1): warning C4267: 'return': conversion from 'size_t' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readOBJ.cpp(38): message : see reference to function template instantiation 'bool igl::readOBJ<double,int>(FILE *,std::vector<std::vector<double,std::allocator<double>>,std::allocator<std::vector<double,std::allocator<double>>>> &,std::vector<std::vector<double,std::allocator<double>>,std::allocator<std::vector<double,std::allocator<double>>>> &,std::vector<std::vector<double,std::allocator<double>>,std::allocator<std::vector<double,std::allocator<double>>>> &,std::vector<std::vector<int,std::allocator<int>>,std::allocator<std::vector<int,std::allocator<int>>>> &,std::vector<std::vector<int,std::allocator<int>>,std::allocator<std::vector<int,std::allocator<int>>>> &,std::vector<std::vector<int,std::allocator<int>>,std::allocator<std::vector<int,std::allocator<int>>>> &)' being compiled
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readOBJ.cpp(261): message : see reference to function template instantiation 'bool igl::readOBJ<double,int>(const std::string,std::vector<std::vector<double,std::allocator<double>>,std::allocator<std::vector<double,std::allocator<double>>>> &,std::vector<std::vector<double,std::allocator<double>>,std::allocator<std::vector<double,std::allocator<double>>>> &,std::vector<std::vector<double,std::allocator<double>>,std::allocator<std::vector<double,std::allocator<double>>>> &,std::vector<std::vector<int,std::allocator<int>>,std::allocator<std::vector<int,std::allocator<int>>>> &,std::vector<std::vector<int,std::allocator<int>>,std::allocator<std::vector<int,std::allocator<int>>>> &,std::vector<std::vector<int,std::allocator<int>>,std::allocator<std::vector<int,std::allocator<int>>>> &)' being compiled
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readOBJ.cpp(142,1): warning C4267: 'return': conversion from 'size_t' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readOBJ.cpp(146,1): warning C4267: 'return': conversion from 'size_t' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readOBJ.cpp(76,1): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h(2263): message : see declaration of 'sscanf'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readOBJ.cpp(99,1): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h(2263): message : see declaration of 'sscanf'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readOBJ.cpp(118,1): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h(2263): message : see declaration of 'sscanf'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readOBJ.cpp(154,1): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h(2263): message : see declaration of 'sscanf'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readOBJ.cpp(160,1): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h(2263): message : see declaration of 'sscanf'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readOBJ.cpp(165,1): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h(2263): message : see declaration of 'sscanf'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readOBJ.cpp(169,1): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h(2263): message : see declaration of 'sscanf'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\readOBJ.cpp(173,1): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h(2263): message : see declaration of 'sscanf'
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\doublearea.cpp(25,25): warning C4244: 'initializing': conversion from '__int64' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\per_vertex_normals.cpp(65): message : see reference to function template instantiation 'void igl::doublearea<Derived,Eigen::Matrix<int,-1,-1,0,-1,-1>,Eigen::Matrix<double,-1,1,0,-1,1>>(const Eigen::MatrixBase<Derived> &,const Eigen::MatrixBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,1,0,-1,1>> &)' being compiled
          with
          [
              Derived=Eigen::Matrix<double,-1,-1,0,-1,-1>
          ]
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\per_vertex_normals.cpp(119): message : see reference to function template instantiation 'void igl::per_vertex_normals<Derived,Eigen::Matrix<int,-1,-1,0,-1,-1>,Derived,Eigen::Matrix<double,-1,-1,0,-1,-1>>(const Eigen::MatrixBase<Derived> &,const Eigen::MatrixBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &,const igl::PerVertexNormalsWeightingType,const Eigen::MatrixBase<Derived> &,Eigen::PlainObjectBase<Derived> &)' being compiled
          with
          [
              Derived=Eigen::Matrix<double,-1,-1,0,-1,-1>
          ]
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\ViewerData.cpp(370): message : see reference to function template instantiation 'void igl::per_vertex_normals<Derived,Eigen::Matrix<int,-1,-1,0,-1,-1>,Derived,Eigen::Matrix<double,-1,-1,0,-1,-1>>(const Eigen::MatrixBase<Derived> &,const Eigen::MatrixBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &,const Eigen::MatrixBase<Derived> &,Eigen::PlainObjectBase<Derived> &)' being compiled
          with
          [
              Derived=Eigen::Matrix<double,-1,-1,0,-1,-1>
          ]
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\doublearea.cpp(25,17): warning C4244: 'initializing': conversion from '__int64' to 'const int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\doublearea.cpp(53,1): warning C4267: 'argument': conversion from 'size_t' to 'const int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\doublearea.cpp(65,1): warning C4267: 'argument': conversion from 'size_t' to 'const int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\squared_edge_lengths.cpp(19,23): warning C4244: 'initializing': conversion from '__int64' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\internal_angles.cpp(30): message : see reference to function template instantiation 'void igl::squared_edge_lengths<Derived,Eigen::Matrix<int,-1,-1,0,-1,-1>,Eigen::Matrix<double,-1,-1,0,-1,-1>>(const Eigen::MatrixBase<Derived> &,const Eigen::MatrixBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Derived> &)' being compiled
          with
          [
              Derived=Eigen::Matrix<double,-1,-1,0,-1,-1>
          ]
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\per_vertex_normals.cpp(70): message : see reference to function template instantiation 'void igl::internal_angles<Derived,Eigen::Matrix<int,-1,-1,0,-1,-1>,Eigen::Matrix<double,-1,3,0,-1,3>>(const Eigen::MatrixBase<Derived> &,const Eigen::MatrixBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,3,0,-1,3>> &)' being compiled
          with
          [
              Derived=Eigen::Matrix<double,-1,-1,0,-1,-1>
          ]
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\squared_edge_lengths.cpp(19,15): warning C4244: 'initializing': conversion from '__int64' to 'const int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\colormap.cpp(1359,22): warning C4244: 'initializing': conversion from 'double' to 'unsigned int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\colormap.cpp(1326): message : see reference to function template instantiation 'void igl::colormap<double>(const double [][3],const T,T &,T &,T &)' being compiled
          with
          [
              T=double
          ]
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\colormap.cpp(1402): message : see reference to function template instantiation 'void igl::colormap<double>(const igl::ColorMapType,const T,T &,T &,T &)' being compiled
          with
          [
              T=double
          ]
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\colormap.cpp(1382): message : see reference to function template instantiation 'void igl::colormap<Derived,Eigen::Matrix<double,-1,-1,0,-1,-1>>(const igl::ColorMapType,const Eigen::MatrixBase<Derived> &,const double,const double,Eigen::PlainObjectBase<Derived> &)' being compiled
          with
          [
              Derived=Eigen::Matrix<double,-1,-1,0,-1,-1>
          ]
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\parula.cpp(30): message : see reference to function template instantiation 'void igl::colormap<Derived,Eigen::Matrix<double,-1,-1,0,-1,-1>>(const igl::ColorMapType,const Eigen::MatrixBase<Derived> &,const bool,Eigen::PlainObjectBase<Derived> &)' being compiled
          with
          [
              Derived=Eigen::Matrix<double,-1,-1,0,-1,-1>
          ]
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\opengl\ViewerData.cpp(122): message : see reference to function template instantiation 'void igl::parula<Derived,Eigen::Matrix<double,-1,-1,0,-1,-1>>(const Eigen::MatrixBase<Derived> &,const bool,Eigen::PlainObjectBase<Derived> &)' being compiled
          with
          [
              Derived=Eigen::Matrix<double,-1,-1,0,-1,-1>
          ]
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\colormap.cpp(1360,21): warning C4244: 'initializing': conversion from 'double' to 'unsigned int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\sort.cpp(30,17): warning C4244: 'initializing': conversion from '__int64' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\doublearea.cpp(162): message : see reference to function template instantiation 'void igl::sort<Derived,Eigen::Matrix<double,-1,3,0,-1,3>,Eigen::Matrix<int,-1,-1,0,-1,-1>>(const Eigen::DenseBase<Derived> &,const int,const bool,Eigen::PlainObjectBase<Derived> &,Eigen::PlainObjectBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &)' being compiled
          with
          [
              Derived=Eigen::Matrix<double,-1,3,0,-1,3>
          ]
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\doublearea.cpp(72): message : see reference to function template instantiation 'void igl::doublearea<Derived,Eigen::Matrix<double,-1,1,0,-1,1>>(const Eigen::MatrixBase<Derived> &,const double,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,1,0,-1,1>> &)' being compiled
          with
          [
              Derived=Eigen::Matrix<double,-1,3,0,-1,3>
          ]
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\sort.cpp(43,17): warning C4244: 'initializing': conversion from '__int64' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\sort.cpp(74,1): warning C4267: '=': conversion from 'size_t' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\sort.cpp(78,1): warning C4267: '=': conversion from 'size_t' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\parallel_for.h(108,62): warning C4244: 'argument': conversion from 'Index' to 'const int', possible loss of data
          with
          [
              Index=Index
          ]
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\doublearea.cpp(199): message : see reference to function template instantiation 'bool igl::parallel_for<Index,igl::doublearea::<lambda_99a76394a40850851452cbb90f64399c>>(const Index,const FunctionType &,const size_t)' being compiled
          with
          [
              Index=Index,
              FunctionType=igl::doublearea::<lambda_99a76394a40850851452cbb90f64399c>
          ]
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\sort.cpp(167,17): warning C4244: 'initializing': conversion from '__int64' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\sort.cpp(37): message : see reference to function template instantiation 'void igl::sort2<Derived,Eigen::Matrix<double,-1,3,0,-1,3>,Eigen::Matrix<int,-1,-1,0,-1,-1>>(const Eigen::DenseBase<Derived> &,const int,const bool,Eigen::PlainObjectBase<Derived> &,Eigen::PlainObjectBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &)' being compiled
          with
          [
              Derived=Eigen::Matrix<double,-1,3,0,-1,3>
          ]
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\doublearea.cpp(162): message : see reference to function template instantiation 'void igl::sort<Derived,Eigen::Matrix<double,-1,3,0,-1,3>,Eigen::Matrix<int,-1,-1,0,-1,-1>>(const Eigen::DenseBase<Derived> &,const int,const bool,Eigen::PlainObjectBase<Derived> &,Eigen::PlainObjectBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &)' being compiled
          with
          [
              Derived=Eigen::Matrix<double,-1,3,0,-1,3>
          ]
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\sort.cpp(169,17): warning C4244: 'initializing': conversion from '__int64' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\sort.cpp(213,17): warning C4244: 'initializing': conversion from '__int64' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\sort.cpp(39): message : see reference to function template instantiation 'void igl::sort3<Derived,Eigen::Matrix<double,-1,3,0,-1,3>,Eigen::Matrix<int,-1,-1,0,-1,-1>>(const Eigen::DenseBase<Derived> &,const int,const bool,Eigen::PlainObjectBase<Derived> &,Eigen::PlainObjectBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &)' being compiled
          with
          [
              Derived=Eigen::Matrix<double,-1,3,0,-1,3>
          ]
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\sort.cpp(215,17): warning C4244: 'initializing': conversion from '__int64' to 'int', possible loss of data
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\parallel_for.h(133,14): warning C4018: '<': signed/unsigned mismatch
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\parallel_for.h(109): message : see reference to function template instantiation 'bool igl::parallel_for<Index,igl::parallel_for::<lambda_1c609831e2de4bce30ac1541faaaffba>,igl::parallel_for::<lambda_6e63ec1ac4e558f044e95a4686b0da4b>,igl::parallel_for::<lambda_1c609831e2de4bce30ac1541faaaffba>>(const Index,const PreFunctionType &,const FunctionType &,const AccumFunctionType &,const size_t)' being compiled
          with
          [
              Index=Index,
              PreFunctionType=igl::parallel_for::<lambda_1c609831e2de4bce30ac1541faaaffba>,
              FunctionType=igl::parallel_for::<lambda_6e63ec1ac4e558f044e95a4686b0da4b>,
              AccumFunctionType=igl::parallel_for::<lambda_1c609831e2de4bce30ac1541faaaffba>
          ]
C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\libigl\include\igl\doublearea.cpp(199): message : see reference to function template instantiation 'bool igl::parallel_for<Index,igl::doublearea::<lambda_99a76394a40850851452cbb90f64399c>>(const Index,const FunctionType &,const size_t)' being compiled
          with
          [
              Index=Index,
              FunctionType=igl::doublearea::<lambda_99a76394a40850851452cbb90f64399c>
          ]
     Creating library C:/Users/kikih/Documents/GitHub/INFOMGP-Practical3/Debug/Practical3_bin.lib and object C:/Users/kikih/Documents/GitHub/INFOMGP-Practical3/Debug/Practical3_bin.exp
LINK : warning LNK4217: symbol 'ccdVec3PointSegmentDist2' defined in 'vec3.obj' is imported by 'ccd.obj' in function 'nextSupport'
LINK : warning LNK4286: symbol 'ccdVec3PointSegmentDist2' defined in 'vec3.obj' is imported by 'polytope.obj'
LINK : warning LNK4217: symbol 'ccdVec3PointTriDist2' defined in 'vec3.obj' is imported by 'ccd.obj' in function 'doSimplex3'
LINK : warning LNK4286: symbol 'ccdVec3PointTriDist2' defined in 'vec3.obj' is imported by 'mpr.obj'
LINK : warning LNK4286: symbol 'ccdVec3PointTriDist2' defined in 'vec3.obj' is imported by 'polytope.obj'
LINK : warning LNK4217: symbol 'ccdFirstDirDefault' defined in 'ccd.obj' is imported by 'main.obj' in function '"public: void __cdecl Mesh::createCollisionConstraints(class Mesh const &,bool,double,double,class std::vector<class Constraint,class std::allocator<class Constraint> > &)" (?createCollisionConstraints@Mesh@@QEAAXAEBV1@_NNNAEAV?$vector@VConstraint@@V?$allocator@VConstraint@@@std@@@std@@@Z)'
LINK : warning LNK4217: symbol 'ccdMPRPenetration' defined in 'mpr.obj' is imported by 'main.obj' in function '"public: void __cdecl Mesh::createCollisionConstraints(class Mesh const &,bool,double,double,class std::vector<class Constraint,class std::allocator<class Constraint> > &)" (?createCollisionConstraints@Mesh@@QEAAXAEBV1@_NNNAEAV?$vector@VConstraint@@V?$allocator@VConstraint@@@std@@@std@@@Z)'
  Practical3_bin.vcxproj -> C:\Users\kikih\Documents\GitHub\INFOMGP-Practical3\Debug\Practical3_bin.exe
